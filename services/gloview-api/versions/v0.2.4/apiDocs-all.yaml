openapi: 3.1.0
info:
  title: GlowView API
  description: |
    # API Guide
    This is a Api alpha-server for GloView App.

    ## Common Rules
    - 인증이 필요한 API는 `Authorization: Bearer {id_token}` 헤더를 포함해야 합니다.

    ## CDN Guide
    - CDN URL 형식: `https://{cdn_host}/{path}`
        - cdn_host: `gloview-alpha-cdn.duckdns.org`
    - Original URL path: `/origin/{file_path}`
        - ex: https://gloview-alpha-cdn.duckdns.org/origin/times_square.jpg
    - Thumbnail URL path: /thumb/{file_path}?w={size}
        - Thumbnail URL의 경우 QueryString 없이 내려감
        - size: 썸네일 크기
        - ex: https://gloview-alpha-cdn.duckdns.org/thumb/gloview-alpha/times_square.jpg?w=200
  version: 0.2.4
servers:
- url: https://gloview-alpha.duckdns.org
  description: Development server
- url: http://localhost:8080
  description: Local server
tags:
- name: 업로드
  description: 파일 업로드 관련 API
- name: ADMIN-USER
  description: ADMIN 에서 호출하는 User CRUD-API
- name: 인증
  description: 사용자 인증 관련 API
- name: 해시태그
  description: 해시태그 관련 API
- name: ADMIN-PHOTO
  description: ADMIN 에서 호출하는 Photo CRUD-API
- name: 사진
  description: 사진 관련 API
paths:
  /internal/admin/users/{id}/profile:
    put:
      tags:
      - ADMIN-USER
      operationId: modifyProfile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModifyUserProfileRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BaseResponseUnit"
  /api/upload/presigned-url:
    post:
      tags:
      - 업로드
      summary: 사전 서명된 업로드 URL 발급
      description: 파일 업로드를 위한 사전 서명된 URL을 발급합니다.
      operationId: presignedUrl
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PresignedUrlRequest"
        required: true
      responses:
        "200":
          description: URL 발급 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BaseResponsePresignedUrlResponse"
  /api/upload/complete:
    post:
      tags:
      - 업로드
      summary: 업로드 완료 처리
      description: 업로드된 파일의 처리를 완료합니다.
      operationId: completeUpload
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompleteUploadPhotoRequest"
        required: true
      responses:
        "200":
          description: 업로드 완료 처리 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BaseResponseAccessUrl"
  /api/signup:
    post:
      tags:
      - 인증
      summary: 사용자 등록
      description: 현재 인증된 사용자의 프로필 정보를 등록합니다.
      operationId: signup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserSignUpRequest"
        required: true
      responses:
        "200":
          description: 사용자 등록 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BaseResponseUnit"
  /internal/admin/users:
    get:
      tags:
      - ADMIN-USER
      operationId: findAll
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
          maximum: 9223372036854775807
          minimum: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 50
          maximum: 9223372036854775807
          minimum: 0
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BaseResponseListUserDetailsResult"
  /internal/admin/users/{id}:
    get:
      tags:
      - ADMIN-USER
      operationId: findById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BaseResponseUserDetailsResponse"
  /internal/admin/photos:
    get:
      tags:
      - ADMIN-PHOTO
      summary: 지역 내 사진 목록 조회
      description: 지정된 영역(BoundingBox) 내의 사진 목록을 조회합니다.
      operationId: getPhotos
      parameters:
      - name: boundingBox
        in: query
        description: 조회할 영역(범위)
        required: true
        schema:
          $ref: "#/components/schemas/BoundingBox"
      - name: sort
        in: query
        description: 정렬 옵션
        required: false
        schema:
          type: string
          default: VIEW_COUNT_DESC
          enum:
          - LIKE_COUNT_ASC
          - LIKE_COUNT_DESC
          - VIEW_COUNT_ASC
          - VIEW_COUNT_DESC
      responses:
        "200":
          description: 조회 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BaseResponsePhotosResponse"
  /api/profile:
    get:
      tags:
      - 인증
      summary: 사용자 프로필 조회
      description: 현재 인증된 사용자의 프로필 정보를 조회합니다.
      operationId: profile
      responses:
        "200":
          description: 프로필 조회 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BaseResponseUserProfileResponse"
  /api/photos:
    get:
      tags:
      - 사진
      summary: 지역 내 사진 목록 조회
      description: 지정된 영역(BoundingBox) 내의 사진 목록을 조회합니다.
      operationId: getPhotos_1
      parameters:
      - name: boundingBox
        in: query
        description: 조회할 영역(범위)
        required: true
        schema:
          $ref: "#/components/schemas/BoundingBox"
      - name: sort
        in: query
        description: 정렬 옵션
        required: false
        schema:
          type: string
          default: VIEW_COUNT_DESC
          enum:
          - LIKE_COUNT_ASC
          - LIKE_COUNT_DESC
          - VIEW_COUNT_ASC
          - VIEW_COUNT_DESC
      responses:
        "200":
          description: 조회 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BaseResponsePhotosResponse"
  /api/photos/my:
    get:
      tags:
      - 사진
      summary: 업로드 사진 조회
      description: 내가 업로드한 사진들을 조회합니다.
      operationId: getMyPhotos
      responses:
        "200":
          description: 클러스터 조회 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BaseResponseMyPhotosResponse"
  /api/photos/clusters:
    get:
      tags:
      - 사진
      summary: 사진 클러스터 조회
      description: 지도에 표시할 사진 클러스터를 조회합니다.
      operationId: getPhotoClusters
      parameters:
      - name: request
        in: query
        description: 클러스터 조회 요청 파라미터
        required: true
        schema:
          $ref: "#/components/schemas/PhotoClusterRequest"
      responses:
        "200":
          description: 클러스터 조회 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BaseResponsePhotoClustersResponse"
  /api/photos/cluster-area:
    get:
      tags:
      - 사진
      summary: 클러스터 영역 내 사진 목록 조회
      description: 지정된 클러스터 영역(중심점 + 반지름) 내의 모든 사진을 조회합니다.
      operationId: getPhotosInClusterArea
      parameters:
      - name: request
        in: query
        description: 클러스터 영역 조회 요청 파라미터
        required: true
        schema:
          $ref: "#/components/schemas/ClusterAreaRequest"
      responses:
        "200":
          description: 조회 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BaseResponsePhotosResponse"
  /api/hashtags:
    get:
      tags:
      - 해시태그
      summary: 해시태그 검색
      description: 키워드를 포함하는 해시태그를 검색합니다.
      operationId: searchHashtags
      parameters:
      - name: request
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/SearchHashtagRequest"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BaseResponseSearchHashtagResponse"
  /api/hashtags/{name}:
    get:
      tags:
      - 해시태그
      summary: 해시태그 이름으로 조회
      description: 주어진 이름과 정확히 일치하는 해시태그를 조회합니다.
      operationId: findByName
      parameters:
      - name: name
        in: path
        description: 조회할 해시태그 이름
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BaseResponseHashtagResponse"
  /api/hashtags/top10:
    get:
      tags:
      - 해시태그
      summary: 사용량 기준 상위 10개 해시태그 조회
      description: 가장 많이 사용된 해시태그 10개를 조회합니다.
      operationId: top10ByUsageCount
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BaseResponseTop10HashtagsResponse"
  /api/signout:
    delete:
      tags:
      - 인증
      summary: 사용자 탈퇴
      description: 현재 인증된 사용자의 프로필 정보를 삭제합니다. (개발용)
      operationId: signout
      responses:
        "200":
          description: 사용자 탈퇴 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BaseResponseUnit"
components:
  schemas:
    ModifyUserProfileRequest:
      type: object
      properties:
        nickname:
          type: string
        avatarUrl:
          type: string
        gender:
          type: string
          enum:
          - MALE
          - FEMALE
          - UNKNOWN
        birthdate:
          type: string
          format: date
        bio:
          type: string
      required:
      - nickname
    BaseResponseUnit:
      type: object
      properties:
        header:
          $ref: "#/components/schemas/ResponseHeader"
      required:
      - header
    ResponseHeader:
      type: object
      properties:
        success:
          type: boolean
        code:
          type: integer
          format: int32
        errorMessage:
          type: string
      required:
      - code
      - success
    PresignedUrlRequest:
      type: object
      description: UPLOAD URL 발급 요청 정보
      properties:
        fileName:
          type: string
        contentType:
          type: string
      required:
      - contentType
      - fileName
    BaseResponsePresignedUrlResponse:
      type: object
      properties:
        header:
          $ref: "#/components/schemas/ResponseHeader"
        body:
          $ref: "#/components/schemas/PresignedUrlResponse"
      required:
      - header
    PresignedUrlResponse:
      type: object
      properties:
        uploadUrl:
          type: string
        fileKey:
          type: string
        expiresAt:
          type: integer
          format: int64
      required:
      - expiresAt
      - fileKey
      - uploadUrl
    CompleteUploadPhotoRequest:
      type: object
      description: 업로드 완료 사진 메타 정보
      properties:
        fileKey:
          type: string
        type:
          type: string
          enum:
          - STANDARD
          - SPHERICAL_360
          - PANORAMA
          - VIRTUAL_TOUR
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
        longitude:
          type: number
          format: double
        latitude:
          type: number
          format: double
        altitude:
          type: number
          format: double
        direction:
          type: number
          format: double
        description:
          type: string
        hashtags:
          type: array
          items:
            type: string
      required:
      - fileKey
      - hashtags
      - height
      - type
      - width
    AccessUrl:
      type: object
      properties:
        accessUrl:
          type: string
        expiresAt:
          type: integer
          format: int64
      required:
      - accessUrl
    BaseResponseAccessUrl:
      type: object
      properties:
        header:
          $ref: "#/components/schemas/ResponseHeader"
        body:
          $ref: "#/components/schemas/AccessUrl"
      required:
      - header
    UserSignUpRequest:
      type: object
      description: 사용자 등록 요청 정보
      properties:
        nickname:
          type: string
        avatarUrl:
          type: string
        gender:
          type: string
          enum:
          - MALE
          - FEMALE
          - UNKNOWN
        birthdate:
          type: string
          format: date
        bio:
          type: string
      required:
      - nickname
    BaseResponseListUserDetailsResult:
      type: object
      properties:
        header:
          $ref: "#/components/schemas/ResponseHeader"
        body:
          type: array
          items:
            $ref: "#/components/schemas/UserDetailsResult"
      required:
      - header
    UserAuthorities:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        role:
          type: string
          enum:
          - ADMIN
          - USER
          - GUEST
        createdAt:
          type: string
          format: date-time
      required:
      - role
      - userId
    UserDetailsResult:
      type: object
      properties:
        users:
          $ref: "#/components/schemas/Users"
        userAuthorities:
          type: array
          items:
            $ref: "#/components/schemas/UserAuthorities"
          uniqueItems: true
        profile:
          $ref: "#/components/schemas/UserProfile"
      required:
      - userAuthorities
      - users
    UserProfile:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        nickname:
          type: string
        avatarUrl:
          type: string
        gender:
          type: string
          enum:
          - MALE
          - FEMALE
          - UNKNOWN
        birthdate:
          type: string
          format: date
        bio:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
      - createdAt
      - nickname
      - updatedAt
      - userId
    Users:
      type: object
      properties:
        id:
          type: integer
          format: int64
        provider:
          type: string
        providerId:
          type: string
        email:
          type: string
        createdAt:
          type: string
          format: date-time
      required:
      - email
      - id
      - provider
      - providerId
    BaseResponseUserDetailsResponse:
      type: object
      properties:
        header:
          $ref: "#/components/schemas/ResponseHeader"
        body:
          $ref: "#/components/schemas/UserDetailsResponse"
      required:
      - header
    ProviderKey:
      type: object
      properties:
        provider:
          type: string
          enum:
          - GOOGLE
          - FACEBOOK
          - UNKNOWN
        providerId:
          type: string
        userIdentifier:
          type: string
      required:
      - provider
      - providerId
      - userIdentifier
    UserDetailsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        providerKey:
          $ref: "#/components/schemas/ProviderKey"
        email:
          type: string
        createdAt:
          type: string
          format: date-time
        roles:
          type: array
          items:
            type: string
            enum:
            - ADMIN
            - USER
            - GUEST
          uniqueItems: true
        profile:
          $ref: "#/components/schemas/UserProfile"
      required:
      - createdAt
      - email
      - id
      - providerKey
      - roles
    BoundingBox:
      type: object
      properties:
        minLat:
          type: number
          format: double
        maxLat:
          type: number
          format: double
        minLng:
          type: number
          format: double
        maxLng:
          type: number
          format: double
      required:
      - maxLat
      - maxLng
      - minLat
      - minLng
    BaseResponsePhotosResponse:
      type: object
      properties:
        header:
          $ref: "#/components/schemas/ResponseHeader"
        body:
          $ref: "#/components/schemas/PhotosResponse"
      required:
      - header
    Gps:
      type: object
      properties:
        longitude:
          type: number
          format: double
        latitude:
          type: number
          format: double
        altitude:
          type: number
          format: double
        direction:
          type: number
          format: double
      required:
      - latitude
      - longitude
    PhotoResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
          enum:
          - STANDARD
          - SPHERICAL_360
          - PANORAMA
          - VIRTUAL_TOUR
        gps:
          $ref: "#/components/schemas/Gps"
        thumbnail:
          $ref: "#/components/schemas/ThumbnailResponse"
      required:
      - gps
      - id
      - thumbnail
      - type
    PhotosResponse:
      type: object
      properties:
        photos:
          type: array
          items:
            $ref: "#/components/schemas/PhotoResponse"
        totalCount:
          type: integer
          format: int32
        generatedAtEpochMilli:
          type: integer
          format: int64
      required:
      - generatedAtEpochMilli
      - photos
      - totalCount
    ThumbnailResponse:
      type: object
      properties:
        photoId:
          type: integer
          format: int64
        url:
          type: string
      required:
      - photoId
      - url
    BaseResponseUserProfileResponse:
      type: object
      properties:
        header:
          $ref: "#/components/schemas/ResponseHeader"
        body:
          $ref: "#/components/schemas/UserProfileResponse"
      required:
      - header
    ProfileResponse:
      type: object
      properties:
        nickname:
          type: string
        avatarUrl:
          type: string
        gender:
          type: string
          enum:
          - MALE
          - FEMALE
          - UNKNOWN
        birthdate:
          type: string
          format: date
        bio:
          type: string
      required:
      - nickname
    UserProfileResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        profile:
          $ref: "#/components/schemas/ProfileResponse"
        isRegistered:
          type: boolean
      required:
      - email
      - id
      - isRegistered
    BaseResponseMyPhotosResponse:
      type: object
      properties:
        header:
          $ref: "#/components/schemas/ResponseHeader"
        body:
          $ref: "#/components/schemas/MyPhotosResponse"
      required:
      - header
    DraftPhotoResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
          enum:
          - STANDARD
          - SPHERICAL_360
          - PANORAMA
          - VIRTUAL_TOUR
        thumbnail:
          $ref: "#/components/schemas/ThumbnailResponse"
      required:
      - id
      - thumbnail
      - type
    MyPhotosResponse:
      type: object
      properties:
        publishPhotos:
          type: array
          items:
            $ref: "#/components/schemas/PhotoResponse"
        draftPhotos:
          type: array
          items:
            $ref: "#/components/schemas/DraftPhotoResponse"
        generatedAtEpochMilli:
          type: integer
          format: int64
      required:
      - draftPhotos
      - generatedAtEpochMilli
      - publishPhotos
    PhotoClusterRequest:
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        searchDistance:
          type: number
          format: double
        clusterDistance:
          type: number
          format: double
      required:
      - clusterDistance
      - latitude
      - longitude
      - searchDistance
    BaseResponsePhotoClustersResponse:
      type: object
      properties:
        header:
          $ref: "#/components/schemas/ResponseHeader"
        body:
          $ref: "#/components/schemas/PhotoClustersResponse"
      required:
      - header
    PhotoClusterResponse:
      type: object
      properties:
        center:
          $ref: "#/components/schemas/Gps"
        count:
          type: integer
          format: int32
        avgDistanceMeters:
          type: number
          format: double
        maxDistanceMeters:
          type: number
          format: double
        thumbnail:
          $ref: "#/components/schemas/ThumbnailResponse"
      required:
      - avgDistanceMeters
      - center
      - count
      - maxDistanceMeters
      - thumbnail
    PhotoClustersResponse:
      type: object
      properties:
        clusters:
          type: array
          items:
            $ref: "#/components/schemas/PhotoClusterResponse"
        totalCount:
          type: integer
          format: int32
        generatedAtEpochMilli:
          type: integer
          format: int64
      required:
      - clusters
      - generatedAtEpochMilli
      - totalCount
    ClusterAreaRequest:
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        radius:
          type: number
          format: double
        sort:
          type: string
          enum:
          - DISTANCE_ASC
          - DISTANCE_DESC
          - LIKE_COUNT_ASC
          - LIKE_COUNT_DESC
          - VIEW_COUNT_ASC
          - VIEW_COUNT_DESC
        size:
          type: integer
          format: int32
      required:
      - latitude
      - longitude
      - radius
      - size
      - sort
    SearchHashtagRequest:
      type: object
      properties:
        keyword:
          type: string
          maxLength: 2147483647
          minLength: 3
        limit:
          type: integer
          format: int32
          default: 20
      required:
      - keyword
    BaseResponseSearchHashtagResponse:
      type: object
      properties:
        header:
          $ref: "#/components/schemas/ResponseHeader"
        body:
          $ref: "#/components/schemas/SearchHashtagResponse"
      required:
      - header
    HashtagResponse:
      type: object
      properties:
        name:
          type: string
        usageCount:
          type: integer
          format: int32
      required:
      - name
      - usageCount
    SearchHashtagResponse:
      type: object
      properties:
        hashtags:
          type: array
          items:
            $ref: "#/components/schemas/HashtagResponse"
      required:
      - hashtags
    BaseResponseHashtagResponse:
      type: object
      properties:
        header:
          $ref: "#/components/schemas/ResponseHeader"
        body:
          $ref: "#/components/schemas/HashtagResponse"
      required:
      - header
    BaseResponseTop10HashtagsResponse:
      type: object
      properties:
        header:
          $ref: "#/components/schemas/ResponseHeader"
        body:
          $ref: "#/components/schemas/Top10HashtagsResponse"
      required:
      - header
    Top10HashtagsResponse:
      type: object
      properties:
        hashtags:
          type: array
          items:
            $ref: "#/components/schemas/HashtagResponse"
      required:
      - hashtags
  securitySchemes:
    openIdScheme:
      type: openIdConnect
      description: OpenID Connect 인증
      in: header
      scheme: bearer
      bearerFormat: JWT ID Token
      openIdConnectUrl: https://accounts.google.com/.well-known/openid-configuration
